# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import user_profile_pb2 as user__profile__pb2


class UserProfileServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateUser = channel.unary_unary(
            "/userprofile.UserProfileService/CreateUser",
            request_serializer=user__profile__pb2.UserProfileRequest.SerializeToString,
            response_deserializer=user__profile__pb2.UserProfileResponse.FromString,
        )
        self.GetUser = channel.unary_unary(
            "/userprofile.UserProfileService/GetUser",
            request_serializer=user__profile__pb2.UserIdentifier.SerializeToString,
            response_deserializer=user__profile__pb2.UserProfileResponse.FromString,
        )
        self.UpdateUser = channel.unary_unary(
            "/userprofile.UserProfileService/UpdateUser",
            request_serializer=user__profile__pb2.UserProfileRequest.SerializeToString,
            response_deserializer=user__profile__pb2.UserProfileResponse.FromString,
        )
        self.DeleteUser = channel.unary_unary(
            "/userprofile.UserProfileService/DeleteUser",
            request_serializer=user__profile__pb2.UserIdentifier.SerializeToString,
            response_deserializer=user__profile__pb2.UserProfileResponse.FromString,
        )
        self.ListUsers = channel.unary_unary(
            "/userprofile.UserProfileService/ListUsers",
            request_serializer=user__profile__pb2.ListUsersRequest.SerializeToString,
            response_deserializer=user__profile__pb2.ListUsersResponse.FromString,
        )


class UserProfileServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def UpdateUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def DeleteUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def ListUsers(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_UserProfileServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
        "CreateUser": grpc.unary_unary_rpc_method_handler(
            servicer.CreateUser,
            request_deserializer=user__profile__pb2.UserProfileRequest.FromString,
            response_serializer=user__profile__pb2.UserProfileResponse.SerializeToString,
        ),
        "GetUser": grpc.unary_unary_rpc_method_handler(
            servicer.GetUser,
            request_deserializer=user__profile__pb2.UserIdentifier.FromString,
            response_serializer=user__profile__pb2.UserProfileResponse.SerializeToString,
        ),
        "UpdateUser": grpc.unary_unary_rpc_method_handler(
            servicer.UpdateUser,
            request_deserializer=user__profile__pb2.UserProfileRequest.FromString,
            response_serializer=user__profile__pb2.UserProfileResponse.SerializeToString,
        ),
        "DeleteUser": grpc.unary_unary_rpc_method_handler(
            servicer.DeleteUser,
            request_deserializer=user__profile__pb2.UserIdentifier.FromString,
            response_serializer=user__profile__pb2.UserProfileResponse.SerializeToString,
        ),
        "ListUsers": grpc.unary_unary_rpc_method_handler(
            servicer.ListUsers,
            request_deserializer=user__profile__pb2.ListUsersRequest.FromString,
            response_serializer=user__profile__pb2.ListUsersResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        "userprofile.UserProfileService", rpc_method_handlers
    )
    server.add_generic_rpc_handlers((generic_handler,))


# This class is part of an EXPERIMENTAL API.
class UserProfileService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateUser(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/userprofile.UserProfileService/CreateUser",
            user__profile__pb2.UserProfileRequest.SerializeToString,
            user__profile__pb2.UserProfileResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def GetUser(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/userprofile.UserProfileService/GetUser",
            user__profile__pb2.UserIdentifier.SerializeToString,
            user__profile__pb2.UserProfileResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def UpdateUser(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/userprofile.UserProfileService/UpdateUser",
            user__profile__pb2.UserProfileRequest.SerializeToString,
            user__profile__pb2.UserProfileResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def DeleteUser(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/userprofile.UserProfileService/DeleteUser",
            user__profile__pb2.UserIdentifier.SerializeToString,
            user__profile__pb2.UserProfileResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def ListUsers(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/userprofile.UserProfileService/ListUsers",
            user__profile__pb2.ListUsersRequest.SerializeToString,
            user__profile__pb2.ListUsersResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )
